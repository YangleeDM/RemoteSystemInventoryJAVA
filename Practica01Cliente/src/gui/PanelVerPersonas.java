/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Interfaces.IPersona;
import Interfaces.IPersonaController;
import java.rmi.RemoteException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import practica01cliente.RMI;



public class PanelVerPersonas extends javax.swing.JPanel {

    private static String ID = "ID";
    private static String NOMBRE = "Nombre";
    private static String TELEFONO = "Teléfono";
    private static String EMAIL = "EMAIL";
    

    
    
    public PanelVerPersonas() {
        initComponents();
        refrescarTabla();
    }
    
    public void refrescarTabla(){
        try {
            
            Vector<Vector> datos = new Vector(); // Dónde van datos
            String textoBuscar = buscarTextField.getText(); //Recucperando texto que se va buscar
            
            List<IPersona> listPersonas; //Donde quedan asignadas todas o un fragmento
            if(textoBuscar.length() == 0 ){ // Si tiene texto o no
                
                listPersonas = RMI.getIPersonaController().list(); //Si no tiene texto, recuperamos a todos
                
            }else{ //CONSULTA
                IPersona persona = RMI.getIPersonaController().newInstance();
                
                String columna = columnasComboBox.getSelectedItem().toString();
                
                if(columna.compareTo(ID) == 0){
                    try{
                    persona.setId(Integer.parseInt(textoBuscar));
                    }catch(NumberFormatException ex){
                        JOptionPane.showMessageDialog(this, "Se requiere un valor númerico", "Número requerido",
                        JOptionPane.ERROR_MESSAGE
                        );
                        
                        return;
                    }
                }else if(columna.compareTo(NOMBRE) == 0){
                    persona.setNombre(textoBuscar);
                }else if(columna.compareTo(TELEFONO) == 0){
                    persona.setTelefono(textoBuscar);
                }else if(columna.compareTo(EMAIL) == 0){
                    persona.setEmail(textoBuscar);
                }
                
                listPersonas = RMI.getIPersonaController().find(persona);
            }
            
            
            for (IPersona persona : listPersonas){
                Vector registro = new Vector();
                registro.add(persona.getId());
                registro.add(persona.getNombre());
                registro.add(persona.getTelefono());
                registro.add(persona.getEmail());
                
                
                datos.add(registro);
            }
            
            
            Vector<String> columnas = new Vector();
            
            columnas.add("ID");
            columnas.add("Nombre");
            columnas.add("Teléfono");
            columnas.add("Email");
            personasTable.setModel(new DefaultTableModel(datos, columnas));
        } catch (RemoteException ex) {
            Logger.getLogger(PanelVerPersonas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        personasTable = new javax.swing.JTable();
        columnasComboBox = new javax.swing.JComboBox();
        buscarTextField = new javax.swing.JTextField();
        buscarButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        modificarButton = new javax.swing.JButton();
        agregarButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 255, 204));

        personasTable.setFont(new java.awt.Font("Tw Cen MT", 2, 18)); // NOI18N
        personasTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(personasTable);

        columnasComboBox.setFont(new java.awt.Font("Book Antiqua", 1, 18)); // NOI18N
        columnasComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ID", "Nombre", "Teléfono", "Email" }));
        columnasComboBox.setOpaque(false);

        buscarTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        buscarButton.setFont(new java.awt.Font("Book Antiqua", 1, 18)); // NOI18N
        buscarButton.setText("Buscar");
        buscarButton.setOpaque(false);
        buscarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButtonActionPerformed(evt);
            }
        });

        eliminarButton.setFont(new java.awt.Font("Book Antiqua", 1, 18)); // NOI18N
        eliminarButton.setText("Eliminar");
        eliminarButton.setOpaque(false);
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarButtonActionPerformed(evt);
            }
        });

        modificarButton.setFont(new java.awt.Font("Book Antiqua", 1, 18)); // NOI18N
        modificarButton.setText("Modificar");
        modificarButton.setOpaque(false);
        modificarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarButtonActionPerformed(evt);
            }
        });

        agregarButton.setFont(new java.awt.Font("Book Antiqua", 1, 18)); // NOI18N
        agregarButton.setText("Agregar");
        agregarButton.setOpaque(false);
        agregarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(columnasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(agregarButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modificarButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(eliminarButton)))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(columnasComboBox)
                    .addComponent(buscarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eliminarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modificarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(agregarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed

           refrescarTabla();
    }//GEN-LAST:event_buscarButtonActionPerformed

    private void modificarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarButtonActionPerformed
        
        try {
            int filaSeleccionada = personasTable.getSelectedRow();
            if (filaSeleccionada == -1){
                return;
            }
            
            int idPersona = (Integer) personasTable.getValueAt(filaSeleccionada, 0);
            IPersona persona = RMI.getIPersonaController().findOne(idPersona);
            
            if(persona.getId() == 0){
                
                JOptionPane.showMessageDialog(
                        this,
                        "Es probable que la persona haya sido eliminada previamente",
                        "Error: Persona no encontrada",
                        JOptionPane.ERROR_MESSAGE);
                refrescarTabla();
            return;
            }
            
            
            DialogModificarPersona dialogModificarPersona = new DialogModificarPersona(null, true, persona);
            dialogModificarPersona.setLocationRelativeTo(this);
            dialogModificarPersona.setVisible(true);
            
            refrescarTabla();

            
            
        } catch (RemoteException ex) {
            Logger.getLogger(PanelVerPersonas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
    }//GEN-LAST:event_modificarButtonActionPerformed

    private void eliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarButtonActionPerformed
        
        try {
            int filaSeleccionada = personasTable.getSelectedRow();
            if (filaSeleccionada == -1){
                return;
            }
            
            int confirmacion = JOptionPane.showConfirmDialog(this, "Está seguro de eliminar un registro?", "Advertencia", JOptionPane.YES_NO_OPTION);
            
            if(confirmacion != JOptionPane.YES_OPTION){
                return;
            }
            
            int idPersona = (Integer) personasTable.getValueAt(filaSeleccionada, 0);
            
            int respuesta = RMI.getIPersonaController().delete(idPersona);
            
            if (respuesta == IPersonaController.DELETE_EXITO){
                JOptionPane.showMessageDialog(this,
                        "Persona eliminada con éxito",
                        "Operación exitosa",
                        JOptionPane.INFORMATION_MESSAGE);
                refrescarTabla();
            }else if(respuesta == IPersonaController.DELETE_ID_INEXISTENTE){
                JOptionPane.showMessageDialog(this,
                        "Persona no encontrada\n"+
                                "Es posible que la persona haya sido eliminada previamente",
                        "Persona no encontrada",
                        JOptionPane.ERROR_MESSAGE); 
            }else{
                JOptionPane.showMessageDialog(this,
                        "Operación incompleta",
                        "Ocurrió un error",
                        JOptionPane.ERROR_MESSAGE); 
            }
            
        } catch (RemoteException ex) {
            Logger.getLogger(PanelVerPersonas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
    }//GEN-LAST:event_eliminarButtonActionPerformed

    private void agregarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarButtonActionPerformed
        
                
        DialogAgregarPersona dialogAgregarPersona = new DialogAgregarPersona(null, true);
        dialogAgregarPersona.setLocationRelativeTo(this);
        dialogAgregarPersona.setVisible(true);
        refrescarTabla();
        
        
        
    }//GEN-LAST:event_agregarButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarButton;
    private javax.swing.JButton buscarButton;
    private javax.swing.JTextField buscarTextField;
    private javax.swing.JComboBox columnasComboBox;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificarButton;
    private javax.swing.JTable personasTable;
    // End of variables declaration//GEN-END:variables
}
